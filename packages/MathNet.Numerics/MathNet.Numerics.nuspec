<?xml version="1.0"?>
<package xmlns="http://schemas.microsoft.com/packaging/2012/06/nuspec.xsd">
  <metadata>
    <id>MathNet.Numerics</id>
    <version>3.8.0</version>
    <title>Math.NET Numerics</title>
    <authors>Christoph Ruegg, Marcus Cuda, Jurgen Van Gael</authors>
    <owners>Christoph Ruegg, Marcus Cuda, Jurgen Van Gael</owners>
    <licenseUrl>http://numerics.mathdotnet.com/License.html</licenseUrl>
    <projectUrl>http://numerics.mathdotnet.com/</projectUrl>
    <iconUrl>http://www.mathdotnet.com/images/MathNet128.png</iconUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <description>Math.NET Numerics is the numerical foundation of the Math.NET project, aiming to provide methods and algorithms for numerical computations in science, engineering and every day use. Supports .Net 4.0, .Net 3.5 and Mono on Windows, Linux and Mac; Silverlight 5, WindowsPhone/SL 8, WindowsPhone 8.1 and Windows 8 with PCL portable profiles 7, 47, 78, 259 and 328; Android/iOS with Xamarin.</description>
    <summary>Math.NET Numerics, providing methods and algorithms for numerical computations in science, engineering and every day use.</summary>
    <releaseNotes>Distributions: PDF and CDF more robust for large distribution parameters.
Distributions: BetaScaled distribution.
Distributions: method to create a PERT distribution (based on BetaScaled) ~John C Barstow
Distributions: Webull.Estimate ~Jon Larborn
Random: NextBoolean extensions.
Root Finding: RootFinding.Secant (based on NewtonRaphson) ~grovesNL
Linear Algebra: Matrix Rank calculation now uses a tolerance based on the matrix size.
Linear Algebra: Alternative CreateMatrix/Vector functions with type parameter on functions instead of type.
Linear Algebra: MKL LinearAlgebra provider requires at least native provider r9 (linear algebra v2.0).
Native Providers: automatic handling of intermediate work arrays/buffers in MKL and OpenBLAS providers ~Marcus Cuda, Kuan Bartel
Native Providers: automatically use native provider if available.
Native Providers: new Control.TryUse to make it simpler to use providers if available but without failing if not.
Native Providers: improved error state checking and handling.
Combinatorics: generate or select random permutation, combination or variation (shuffling)
Finance: rename CompoundMonthlyReturn to CompoundReturn (old now obsolete).</releaseNotes>
    <tags>math numeric statistics probability integration interpolation regression solve fit linear algebra matrix fft</tags>
    <dependencies>
      <group targetFramework=".NETFramework3.5">
        <dependency id="TaskParallelLibrary" version="1.0.2856.0" />
      </group>
      <group targetFramework=".NETFramework4.0" />
    </dependencies>
    <frameworkAssemblies>
      <frameworkAssembly assemblyName="System.Numerics" targetFramework=".NETFramework4.0, Windows8.0, Silverlight5.0, MonoAndroid1.0, MonoTouch1.0" />
    </frameworkAssemblies>
  </metadata>
</package>